@page "/api/ItemTipoRenglon"
@inject IHttpServicio http

<style>
    body {
        background-image: url('/images/InnObra.jpg');
        background-size: cover;
        background-attachment: fixed;
        background-position: center;
        filter: brightness(0.7); /* Oscurece la imagen de fondo */
    }

    h3, table, p, a, button {
        color: white; /* Asegura que el texto resalte */
    }

    table {
        background-color: rgba(0, 0, 0, 0.6); /* Fondo semitransparente para la tabla */
        padding: 1rem;
        border-radius: 8px;
    }

    th, td {
        padding: 10px;
    }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
    }

    .btn-danger {
        background-color: #dc3545;
        border-color: #dc3545;
    }
</style>

<h3>Lista de Item Tipo Renglon</h3>
<br />
<a class="btn btn-primary" href="/api/ItemTipoRenglon/crear">Nuevo Item Tipo Renglon</a>
<br />
<table>
    <tr>
        <th>Item</th>
        <th>Recurso</th>
    </tr>
    @if (Mensaje == "")
    {
        @if (listaItemTipoRenglon == null)
        {
            <p>Buscando....</p>
        }
        else if (listaItemTipoRenglon.Count == 0)
        {
            <p>No existen item tipo renglon</p>
        }
        else
        {
            @foreach (var item in listaItemTipoRenglon)
            {
                <tr>
                    <td>@item.Recurso?.Nombre</td> <!-- Asegúrate de que la clase Recurso tenga una propiedad Nombre -->
                    <td>
                        <a class="btn btn-primary"
                           href="api/ItemTipoRenglon/editar/@item.Id">
                            Editar
                        </a>
                    </td>
                    <td>
                        <button class="btn btn-danger"
                                @onclick="() => Eliminar(item)">
                            Borrar
                        </button>
                    </td>
                </tr>
            }
        }
    }
    else
    {
        <p>Error: @Mensaje</p>
    }
</table>

<Confirmacion @ref="confirmacion"
              Titulo="CUIDADO"
              textCancelar="Salir"
              onCancel="Cancelar"
              onConfirm="Borrar">
    <h5>Está por borrar el Item Tipo Renglon</h5>
    <br />
    <p>¿Está seguro?</p>
</Confirmacion>

@code {
    Confirmacion confirmacion;

    List<ItemTipoRenglon> listaItemTipoRenglon;
    ItemTipoRenglon itemTipoRenglon;
    string Mensaje = "";

    ItemTipoRenglon? itemTipoRenglonBorrar = null;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Leer();
    }

    private async Task Leer()
    {
        var resp = await http.Get<List<ItemTipoRenglon>>("api/ItemTipoRenglon");
        if (!resp.Error)
        {
            listaItemTipoRenglon = resp.Respuesta;
        }
        else
        {
            Mensaje = await resp.ObtenerError();
        }
    }

    private async Task Eliminar(ItemTipoRenglon itemTipoRenglon)
    {
        itemTipoRenglonBorrar = itemTipoRenglon;
        confirmacion.Ver();
    }

    private void Cancelar()
    {
        confirmacion.Ocultar();
        itemTipoRenglonBorrar = null;
    }

    private async Task Borrar()
    {
        var respuesta = await http.Delete($"api/ItemTipoRenglon/{itemTipoRenglonBorrar.Id}");
        if (respuesta.Error)
        {
            Mensaje = "No se pudo borrar el Item Tipo Renglon";
        }
        Cancelar();
        await Leer();
    }
}
