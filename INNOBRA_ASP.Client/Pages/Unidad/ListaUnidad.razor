@page "/Api/Unidades"
@inject IHttpServicio http

<div class="fondo"></div>
    <div class="overlay"></div>

<div class="contenedor-formulario">

    <h3>Unidades</h3>

    @if (listaUnidades != null && listaUnidades.Any())
    {
            <table>
                <thead>
                    <tr>
                        <th scope="col">Nombre</th>
                        <th scope="col">Descripción</th>
                        <th scope="col">Costo</th>
                        <th scope="col">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var unidad in listaUnidades)
                {
                            <tr>
                                <td>@unidad.Nombre</td>
                                <td>@unidad.Descripcion</td>
                                <td>@unidad.Costo</td>

                                <td>
                                                    <a class="btn btn-warning btn-sm" href="/api/Unidades/editar/@unidad.Id">Editar</a>
                                    <button class="btn btn-danger btn-sm" @onclick="() => Eliminar(unidad.Id)">Eliminar</button>
                                </td>

                            </tr>
                }
                </tbody>
            </table>
    }
    else
    {
            <div class="alert alert-warning" role="alert">
                No hay unidades registradas.
            </div>
    }

    <br/>

    <a class="btn btn-primary" href="/api/Unidades/crear">
        <i class="bi bi-plus-circle"></i> Crear Item
    </a>

</div>

@code {
    List<Unidad> listaUnidades = new List<Unidad>();
    List<ItemTipo> listaItemsTipos = new List<ItemTipo>();
    List<Presupuesto> listaPresupuestos = new List<Presupuesto>();

    string Mensaje = "";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Leer();
    }

    private async Task Leer()
    {
        var resp = await http.Get<List<Unidad>>("Api/Items");
        if (!resp.Error)
        {
            listaUnidades = resp.Respuesta;
        }
        else
        {
            Mensaje = await resp.ObtenerError();
        }
    }

    
    private async Task Eliminar(int id)
    {
        var resp = await http.Delete($"Api/Items/{id}");
        if (!resp.Error)
        {
            await Leer(); // Recarga la lista después de eliminar
        }
        else
        {
            Mensaje = await resp.ObtenerError();
        }
    }
}