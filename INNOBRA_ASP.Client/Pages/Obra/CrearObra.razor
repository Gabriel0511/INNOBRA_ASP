@page "/api/Obras/crear"
@inject IHttpServicio http
@using INNOBRA_ASP.Shared.DTO
@using System.Net.Http.Json
@inject NavigationManager nav
@inject MensajeService mensajeService
@using Microsoft.AspNetCore.Components.Forms

<div class="fondo"></div>
<div class="overlay"></div>
<div class="contenedor-formulario">
    <h3>Agregar Obra</h3>

    <EditForm Model="@obra" OnValidSubmit="Grabar">
        <DataAnnotationsValidator />

        <div class="form-group">
            <div style="display:flex">
                <label>Nombre:</label>
                <InputText class="form-control" style="max-width: 35%; max-height: 2.2rem; margin-left:0.5rem " @bind-Value="@obra.Nombre" />
            </div>
            <div>
                <ValidationMessage For="@(() => obra.Nombre)" />
            </div>
        </div>

        <div class="mb-3" style="display:flex">
            <label>Fecha de Inicio:</label>
            <InputDate class="form-control" style="max-width: 35%; max-height: 2.2rem; margin-left:0.5rem " @bind-Value="obra.FechaInicio" />
            <ValidationMessage For="@(() => obra.FechaInicio)" />
        </div>

        <div class="mb-3" style="display:flex">
            <label>Fecha de Fin:</label>
            <InputDate class="form-control" style="max-width: 35%; max-height: 2.2rem; margin-left:0.5rem " @bind-Value="obra.FechaFin" />
            <ValidationMessage For="@(() => obra.FechaFin)" />
        </div>

        <div class="mb-3" style="display:flex">
            <label>Imagen:</label>
            <InputFile class="form-control" style="max-width: 65%; max-height: 3rem; margin-left:0.5rem " OnChange="OnInputFileChange" />
        </div>

        <!-- Aquí se muestra el mensaje de error -->
        <div class="text-danger">@mensajeError</div>

        <button type="submit" class="btn btn-primary">Guardar</button>
        <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
    </EditForm>

</div>

@code {
    private string mensajeError = "";

    private Obra obra = new Obra();
    private List<Obra> listaObra = new List<Obra>();

    protected override async Task OnInitializedAsync()
    {
        obra.FechaInicio = DateTime.Now.Date;
        obra.FechaFin = DateTime.Now.Date;

        await CargarObra();
    }

    private async Task CargarObra()
    {
        var respuesta = await http.Get<List<Obra>>("api/Obras");
        if (!respuesta.Error)
        {
            listaObra = respuesta.Respuesta;
        }
    }

    private async Task Grabar()
    {
        if (obra.FechaInicio > obra.FechaFin)
        {
            mensajeError = "La fecha de inicio no puede ser mayor que la fecha de fin.";
            return;
        }

        mensajeError = ""; // Limpiar error si es válido

        var httpRespuesta = await http.Post<Obra>("api/Obras", obra);
        if (!httpRespuesta.Error)
        {
            mensajeService.Mensaje = "Obra agregada con éxito.";
            nav.NavigateTo("/api/Obras");
        }
        else
        {
            mensajeService.Mensaje = "Error al guardar la obra.";
        }
    }

    private void Cancelar()
    {
        nav.NavigateTo("/api/Obras");
    }

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        var imageFile = e.File;
        using (var stream = new MemoryStream())
        {
            await imageFile.OpenReadStream().CopyToAsync(stream);
            obra.Imagen = stream.ToArray(); // Guarda la imagen en byte[]
        }
    }
}
