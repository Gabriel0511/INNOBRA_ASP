@page "/api/Recursos/crear"
@inject IHttpServicio http
@using INNOBRA_ASP.Shared.DTO
@using System.Net.Http.Json
@inject NavigationManager nav
@inject MensajeService mensajeService

<div class="fondo"></div>
<div class="overlay"></div>
<div class="contenedor-formulario">
    <h3>Gestión de Recursos</h3>

    <!-- Formulario para Crear/Editar Recurso -->
    <EditForm Model="@recurso" OnValidSubmit="() => Grabar()">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <label>Nombre:</label>
            <InputText @bind-Value="recurso.Nombre" class="form-control" />
        </div>

        <div>
            <label>Cantidad:</label>
            <InputText @bind-Value="recurso.Cantidad" class="form-control" />
        </div>

        <div class="mb-3">
            <label>Unidad de medida:</label>
            <div class="d-flex align-items-center" style="width: 100%;">
                <select class="form-control" @bind="recurso.Unidad_Id"> style="flex: 1;">
                    <option value="">Seleccione la unidad de medida</option>
                    @foreach (var unidad in listaUnidad)
                    {
                        <option value="@unidad.Id">@unidad.Nombre</option>
                    }
                </select>
                <a class="btn btn-success btn-sm ms-2 d-flex align-items-center justify-content-center"
                   href="/api/Unidades/crear" title="Agregar unidad de medida" style="height: 100%;">
                    <i class="bi bi-plus"></i>
                </a>
                <a class="btn btn-info btn-sm ms-2 d-flex align-items-center justify-content-center"
                   href="/api/Unidades" title="Ver unidades de medida" style="height: 100%;">
                    <i class="bi bi-list"></i>
                </a>
            </div>
            <ValidationMessage For="@(() => recurso.Unidad_Id)" />
        </div>

        <div>
            <label>Tipo de Recurso:</label>
            <InputSelect @bind-Value="recurso.Tipo" class="form-control">
                @foreach (var tipo in Enum.GetValues(typeof(CrearRecursoDTO.TipoRecursoDTO)))
                {
                    <option value="@tipo">@tipo</option>
                }
            </InputSelect>
        </div>

        <button type="submit" class="btn btn-primary">Guardar</button>
        <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
    </EditForm>
</div>

@code {
    private CrearRecursoDTO recurso = new CrearRecursoDTO();
    private List<Unidad> listaUnidad = new List<Unidad>();

    protected override async Task OnInitializedAsync()
    {
        await CargarUnidades();
    }

    private async Task CargarUnidades()
    {
        var respuesta = await http.Get<List<Unidad>>("api/Unidades"); // O la URL correspondiente a las unidades
        if (!respuesta.Error)
        {
            listaUnidad = respuesta.Respuesta;
        }
    }

    private async Task Grabar()
    {
        if (recurso != null)
        {
            // Llamada al método Post para enviar el recurso
            var respuesta = await http.Post<CrearRecursoDTO>("api/Recursos", recurso);

            if (!respuesta.Error)
            {
                mensajeService.Mensaje = "Recurso agregado con éxito.";
                await Task.Delay(1500);
                nav.NavigateTo("/api/Recursos");
            }
            else
            {
                var errorContent = await respuesta.ObtenerError();
                mensajeService.Mensaje = $"Error: {errorContent}";
            }
        }
        else
        {
            mensajeService.Mensaje = "Error: Entidad desconocida.";
        }
    }

    private void Cancelar()
    {
        nav.NavigateTo("/api/Recursos");
    }
}
