@page "/api/ItemTipos/editar/{id:int}"
@inject IHttpServicio http
@using INNOBRA_ASP.Shared.DTO
@using System.Net.Http.Json
@inject NavigationManager nav

<h3>Editar Item Tipo</h3>

<!-- Formulario para Editar ItemTipo -->
<EditForm Model="@itemTipo" OnValidSubmit="Actualizar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Código:</label>
        <InputText @bind-Value="itemTipo.Codigo" />
    </div>

    <div>
        <label>Nombre:</label>
        <InputText @bind-Value="itemTipo.Nombre" />
    </div>

    <div>
        <label>Unidad:</label>
        <InputNumber @bind-Value="itemTipo.Unidad_Id" />
    </div>

    <button type="submit" class="btn btn-primary">Guardar Cambios</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
</EditForm>

<hr />

@code {
    [Parameter] public int id { get; set; } // ID del ItemTipo a editar
    private CrearItemTipoDTO itemTipo = new CrearItemTipoDTO();

    protected override async Task OnInitializedAsync()
    {
        await CargarItemTipo();
    }

    private async Task CargarItemTipo()
    {
        // Carga el ItemTipo existente usando su ID
        var respuesta = await http.Get<CrearItemTipoDTO>($"api/ItemTipos/{id}");
        if (!respuesta.Error)
        {
            itemTipo = respuesta.Respuesta;
        }
        else
        {
            // Manejo del error en caso de fallo en la carga
            nav.NavigateTo("/api/ItemTipos");
        }
    }

    private async Task Actualizar()
    {
        var respuesta = await http.Put($"api/ItemTipos/{id}", itemTipo);
        if (!respuesta.Error)
        {
            nav.NavigateTo("/api/ItemTipos");
        }
        else
        {
            // Manejo de error en caso de fallo en la actualización
        }
    }

    private void Cancelar()
    {
        nav.NavigateTo("/api/ItemTipos");
    }
}
